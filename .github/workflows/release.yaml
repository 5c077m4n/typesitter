---
name: Tagged Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  tagged_release:
    name: Tagged Release
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/workflows/toolchain
        with:
          target: ${{ matrix.target }}

      - uses: ./.github/workflows/cache

      - name: Tag version
        run: echo "TAG_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Set Xcode version for macOS aarch64 builds
        if: ${{ matrix.target == 'aarch64-apple-darwin' && matrix.os == 'macos-latest' }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Install cargo clippy
        run: rustup component add clippy
      - name: Clippy check
        uses: actions-rs/cargo@v1
        with:
          command: clippy

      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Release build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      # - name: Setup tmate debug session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   timeout-minutes: 30
      #   with:
      #     sudo: false
      #     limit-access-to-actor: true

      - name: Release artifacts
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.TAG_VERSION }}-${{ matrix.os }}-${{ matrix.target }}
          prerelease: contains(env.TAG_VERSION, 'alpha') || contains(env.TAG_VERSION, 'beta')
          files: |
            target/${{ matrix.target }}/release/cli
          fail_on_unmatched_files: true
